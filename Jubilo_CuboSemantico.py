#HÃ©ctor David Salazar Schz, A01207471.
#Melanie Vielma Saldana, A00818905.
#Diseno de compiladores Ago-Dic 2019. ITESM.
#Jubilo - CUBO SEMANTICO (Semantica basica)
#15/10/2019

class Jubilo_CuboSemantico:
    def __init__(self):
        '''
        Este diccionario establece todas las combinaciones posibles entre
        dos operandos para todos los tipos de datos manejados por Jubilo
        (int, float, bool, char) en la forma ->

        (operando1, operando2, operador) : tipo de operando resultado
        '''
        self.diccionario = {
            ( 'int' , 'int' , '+' ) :'int',
            ( 'int' , 'int' , '-' ) : 'int',
            ( 'int' , 'int' , '*' ) : 'int',
            ( 'int' , 'int' , '/' ) : 'float',
            ( 'int' , 'int' , '=' ) : 'int',
            ( 'int' , 'int' , '==' ) : 'bool',
            ( 'int' , 'int' , '<' ) : 'bool',
            ( 'int' , 'int' , '>' ) : 'bool',
            ( 'int' , 'int' , '<=' ) : 'bool',
            ( 'int' , 'int' , '>=' ) : 'bool',
            ( 'int' , 'int' , '!=' ) : 'bool',
            ( 'int' , 'int' , 'OR' ) : 'error',
            ( 'int' , 'int' , 'AND' ) : 'error',

            ( 'int' , 'float' , '+' ) : 'float',
            ( 'int' , 'float' , '-' ) : 'float',
            ( 'int' , 'float' , '*' ) : 'float',
            ( 'int' , 'float' , '/' ) : 'float',
            ( 'int' , 'float' , '=' ) : 'int', #Cuando se asigna a una variable int, un flotante se redondea a int
            ( 'int' , 'float' , '==' ) : 'bool',
            ( 'int' , 'float' , '<' ) : 'bool',
            ( 'int' , 'float' , '>' ) : 'bool',
            ( 'int' , 'float' , '<=' ) : 'bool',
            ( 'int' , 'float' , '>=' ) : 'bool',
            ( 'int' , 'float' , '!=' ) : 'bool',
            ( 'int' , 'float' , 'OR' ) : 'error',
            ( 'int' , 'float' , 'AND' ) : 'error',

            ( 'int' , 'bool' , '+' ) : 'error',
            ( 'int' , 'bool' , '-' ) : 'error',
            ( 'int' , 'bool' , '*' ) : 'error',
            ( 'int' , 'bool' , '/' ) : 'error',
            ( 'int' , 'bool' , '=' ) : 'error',
            ( 'int' , 'bool' , '==' ) : 'error',
            ( 'int' , 'bool' , '<' ) : 'error',
            ( 'int' , 'bool' , '>' ) : 'error',
            ( 'int' , 'bool' , '<=' ) : 'error',
            ( 'int' , 'bool' , '>=' ) : 'error',
            ( 'int' , 'bool' , '!=' ) : 'error',
            ( 'int' , 'bool' , 'OR' ) : 'error',
            ( 'int' , 'bool' , 'AND' ) : 'error',

            ( 'int' , 'char' , '+' ) : 'error',
            ( 'int' , 'char' , '-' ) : 'error',
            ( 'int' , 'char' , '*' ) : 'error',
            ( 'int' , 'char' , '/' ) : 'error',
            ( 'int' , 'char' , '=' ) : 'error',
            ( 'int' , 'char' , '==' ) : 'error',
            ( 'int' , 'char' , '<' ) : 'error',
            ( 'int' , 'char' , '>' ) : 'error',
            ( 'int' , 'char' , '<=' ) : 'error',
            ( 'int' , 'char' , '>=' ) : 'error',
            ( 'int' , 'char' , '!=' ) : 'error',
            ( 'int' , 'char' , 'OR' ) : 'error',
            ( 'int' , 'char' , 'AND' ) : 'error',

            ( 'float' , 'int' , '+' ) : 'float',
            ( 'float' , 'int' , '-' ) : 'float',
            ( 'float' , 'int' , '*' ) : 'float',
            ( 'float' , 'int' , '/' ) : 'float',
            ( 'float' , 'int' , '=' ) : 'float',
            ( 'float' , 'int' , '==' ) : 'bool',
            ( 'float' , 'int' , '<' ) : 'bool',
            ( 'float' , 'int' , '>' ) : 'bool',
            ( 'float' , 'int' , '<=' ) : 'bool',
            ( 'float' , 'int' , '>=' ) : 'bool',
            ( 'float' , 'int' , '!=' ) : 'bool',
            ( 'float' , 'int' , 'OR' ) : 'error',
            ( 'float' , 'int' , 'AND' ) : 'error',

            ( 'float' , 'float' , '+' ) : 'float',
            ( 'float' , 'float' , '-' ) : 'float',
            ( 'float' , 'float' , '*' ) : 'float',
            ( 'float' , 'float' , '/' ) : 'float',
            ( 'float' , 'float' , '=' ) : 'float',
            ( 'float' , 'float' , '==' ) : 'bool',
            ( 'float' , 'float' , '<' ) : 'bool',
            ( 'float' , 'float' , '>' ) : 'bool',
            ( 'float' , 'float' , '<=' ) : 'bool',
            ( 'float' , 'float' , '>=' ) : 'bool',
            ( 'float' , 'float' , '!=' ) : 'bool',
            ( 'float' , 'float' , 'OR' ) : 'error',
            ( 'float' , 'float' , 'AND' ) : 'error',

            ( 'float' , 'bool' , '+' ) : 'error',
            ( 'float' , 'bool' , '-' ) : 'error',
            ( 'float' , 'bool' , '*' ) : 'error',
            ( 'float' , 'bool' , '/' ) : 'error',
            ( 'float' , 'bool' , '=' ) : 'error',
            ( 'float' , 'bool' , '==' ) : 'error',
            ( 'float' , 'bool' , '<' ) : 'error',
            ( 'float' , 'bool' , '>' ) : 'error',
            ( 'float' , 'bool' , '<=' ) : 'error',
            ( 'float' , 'bool' , '>=' ) : 'error',
            ( 'float' , 'bool' , '!=' ) : 'error',
            ( 'float' , 'bool' , 'OR' ) : 'error',
            ( 'float' , 'bool' , 'AND' ) : 'error',

            ( 'float' , 'char' , '+' ) : 'error',
            ( 'float' , 'char' , '-' ) : 'error',
            ( 'float' , 'char' , '*' ) : 'error',
            ( 'float' , 'char' , '/' ) : 'error',
            ( 'float' , 'char' , '=' ) : 'error',
            ( 'float' , 'char' , '==' ) : 'error',
            ( 'float' , 'char' , '<' ) : 'error',
            ( 'float' , 'char' , '>' ) : 'error',
            ( 'float' , 'char' , '<=' ) : 'error',
            ( 'float' , 'char' , '>=' ) : 'error',
            ( 'float' , 'char' , '!=' ) : 'error',
            ( 'float' , 'char' , 'OR' ) : 'error',
            ( 'float' , 'char' , 'AND' ) : 'error',

            ( 'bool' , 'int' , '+' ) : 'error',
            ( 'bool' , 'int' , '-' ) : 'error',
            ( 'bool' , 'int' , '*' ) : 'error',
            ( 'bool' , 'int' , '/' ) : 'error',
            ( 'bool' , 'int' , '=' ) : 'error',
            ( 'bool' , 'int' , '==' ) : 'error',
            ( 'bool' , 'int' , '<' ) : 'error',
            ( 'bool' , 'int' , '>' ) : 'error',
            ( 'bool' , 'int' , '<=' ) : 'error',
            ( 'bool' , 'int' , '>=' ) : 'error',
            ( 'bool' , 'int' , '!=' ) : 'error',
            ( 'bool' , 'int' , 'OR' ) : 'error',
            ( 'bool' , 'int' , 'AND' ) : 'error',

            ( 'bool' , 'float' , '+' ) : 'error',
            ( 'bool' , 'float' , '-' ) : 'error',
            ( 'bool' , 'float' , '*' ) : 'error',
            ( 'bool' , 'float' , '/' ) : 'error',
            ( 'bool' , 'float' , '=' ) : 'error',
            ( 'bool' , 'float' , '==' ) : 'error',
            ( 'bool' , 'float' , '<' ) : 'error',
            ( 'bool' , 'float' , '>' ) : 'error',
            ( 'bool' , 'float' , '<=' ) : 'error',
            ( 'bool' , 'float' , '>=' ) : 'error',
            ( 'bool' , 'float' , '!=' ) : 'error',
            ( 'bool' , 'float' , 'OR' ) : 'error',
            ( 'bool' , 'float' , 'AND' ) : 'error',

            ( 'bool' , 'bool' , '+' ) : 'error',
            ( 'bool' , 'bool' , '-' ) : 'error',
            ( 'bool' , 'bool' , '*' ) : 'error',
            ( 'bool' , 'bool' , '/' ) : 'error',
            ( 'bool' , 'bool' , '=' ) : 'bool',
            ( 'bool' , 'bool' , '==' ) : 'bool',
            ( 'bool' , 'bool' , '<' ) : 'bool',
            ( 'bool' , 'bool' , '>' ) : 'bool',
            ( 'bool' , 'bool' , '<=' ) : 'bool',
            ( 'bool' , 'bool' , '>=' ) : 'bool',
            ( 'bool' , 'bool' , '!=' ) : 'bool',
            ( 'bool' , 'bool' , 'OR' ) : 'bool',
            ( 'bool' , 'bool' , 'AND' ) : 'bool',

            ( 'bool' , 'char' , '+' ) : 'error',
            ( 'bool' , 'char' , '-' ) : 'error',
            ( 'bool' , 'char' , '*' ) : 'error',
            ( 'bool' , 'char' , '/' ) : 'error',
            ( 'bool' , 'char' , '=' ) : 'error',
            ( 'bool' , 'char' , '==' ) : 'error',
            ( 'bool' , 'char' , '<' ) : 'error',
            ( 'bool' , 'char' , '>' ) : 'error',
            ( 'bool' , 'char' , '<=' ) : 'error',
            ( 'bool' , 'char' , '>=' ) : 'error',
            ( 'bool' , 'char' , '!=' ) : 'error',
            ( 'bool' , 'char' , 'OR' ) : 'error',
            ( 'bool' , 'char' , 'AND' ) : 'error',

            ( 'char' , 'int' , '+' ) : 'error',
            ( 'char' , 'int' , '-' ) : 'error',
            ( 'char' , 'int' , '*' ) : 'error',
            ( 'char' , 'int' , '/' ) : 'error',
            ( 'char' , 'int' , '=' ) : 'error',
            ( 'char' , 'int' , '==' ) : 'error',
            ( 'char' , 'int' , '<' ) : 'error',
            ( 'char' , 'int' , '>' ) : 'error',
            ( 'char' , 'int' , '<=' ) : 'error',
            ( 'char' , 'int' , '>=' ) : 'error',
            ( 'char' , 'int' , '!=' ) : 'error',
            ( 'char' , 'int' , 'OR' ) : 'error',
            ( 'char' , 'int' , 'AND' ) : 'error',

            ( 'char' , 'float' , '+' ) : 'error',
            ( 'char' , 'float' , '-' ) : 'error',
            ( 'char' , 'float' , '*' ) : 'error',
            ( 'char' , 'float' , '/' ) : 'error',
            ( 'char' , 'float' , '=' ) : 'error',
            ( 'char' , 'float' , '==' ) : 'error',
            ( 'char' , 'float' , '<' ) : 'error',
            ( 'char' , 'float' , '>' ) : 'error',
            ( 'char' , 'float' , '<=' ) : 'error',
            ( 'char' , 'float' , '>=' ) : 'error',
            ( 'char' , 'float' , '!=' ) : 'error',
            ( 'char' , 'float' , 'OR' ) : 'error',
            ( 'char' , 'float' , 'AND' ) : 'error',

            ( 'char' , 'bool' , '+' ) : 'error',
            ( 'char' , 'bool' , '-' ) : 'error',
            ( 'char' , 'bool' , '*' ) : 'error',
            ( 'char' , 'bool' , '/' ) : 'error',
            ( 'char' , 'bool' , '=' ) : 'error',
            ( 'char' , 'bool' , '==' ) : 'error',
            ( 'char' , 'bool' , '<' ) : 'error',
            ( 'char' , 'bool' , '>' ) : 'error',
            ( 'char' , 'bool' , '<=' ) : 'error',
            ( 'char' , 'bool' , '>=' ) : 'error',
            ( 'char' , 'bool' , '!=' ) : 'error',
            ( 'char' , 'bool' , 'OR' ) : 'error',
            ( 'char' , 'bool' , 'AND' ) : 'error',

            ( 'char' , 'char' , '+' ) : 'char',
            ( 'char' , 'char' , '-' ) : 'char',
            ( 'char' , 'char' , '*' ) : 'error',
            ( 'char' , 'char' , '/' ) : 'error',
            ( 'char' , 'char' , '=' ) : 'char',
            ( 'char' , 'char' , '==' ) : 'bool',
            ( 'char' , 'char' , '<' ) : 'bool',
            ( 'char' , 'char' , '>' ) : 'bool',
            ( 'char' , 'char' , '<=' ) : 'bool',
            ( 'char' , 'char' , '>=' ) : 'bool',
            ( 'char' , 'char' , '!=' ) : 'bool',
            ( 'char' , 'char' , 'OR' ) : 'error',
            ( 'char' , 'char' , 'AND' ) : 'error'
        }

        '''
        Funcion de obtencion de tipo de valor resultado de la operacion
        (operator) entre los operandos operando1 y operando2
        '''
        def get_tipo(self, operando1, operando2, operator):
            return self.diccionario[operando1, operando2, operator]
